# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    # @param {TreeNode} root
    # @return {string[]}
    # bfs + queue
    def binaryTreePaths(self, root):
        if not root:
            return []
        
        res,stack=[],[(root,'')]#stack，后进先出
        while stack:
            node,str1=stack.pop()
            if not node.left and not node.right:
                res.append(str1+str(node.val))
            if node.right:
                stack.append((node.right,str1+str(node.val)+'->'))#把pop出的元素值+本次元素值+'->'
            if node.left:
                stack.append((node.left,str1+str(node.val)+'->'))
        return res