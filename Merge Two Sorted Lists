/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 /*创建头结点法
struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2) {
    if (!l1)return l2;
    if (!l2)return l1;
    struct ListNode* head = NULL;
    //先手动创建一个头结点，然后再进入循环加结点
    if (l1->val < l2->val)  {head=l1;l1=l1->next;}
    else                    {head=l2;l2=l2->next;}
    
    struct ListNode* p = head;//head用于输出，而p作为工具
    while(l1 && l2)
    {
        if(l1->val < l2->val) {p->next=l1;l1=l1->next;}
        else {p->next=l2;l2=l2->next;}
        p=p->next;
    }
    
    if(l1)  p->next=l1;
    else    p->next=l2;
    
    return head;        
}*/
struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2) {
    if (!l1) return l2;if(!l2) return l1;
    struct ListNode* head=NULL;
    if(l1->val > l2->val)
    {
        head=l2;
        head->next=mergeTwoLists(l1,l2->next);
    }else{
        head=l1;
        head->next=mergeTwoLists(l1->next,l2);  
    }
    return head;//两个都为空return head=NULL
}